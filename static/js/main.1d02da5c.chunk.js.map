{"version":3,"sources":["app/axiosConfig.js","app/history.js","actions/app.js","common/formTools.js","components/LoginForm/index.jsx","pages/LoginPage/index.jsx","components/UsersList/index.jsx","common/helpers.js","components/Search/index.jsx","pages/UsersListPage/index.jsx","components/Layout/index.jsx","components/ErrorMessage/index.jsx","pages/NotFoundPage/index.jsx","components/Preloader/index.jsx","components/UserCredentialsForm/index.jsx","pages/AddUser/index.jsx","app/PrivateRouter.jsx","app/NotLoggedRoute.jsx","app/MainRouter.jsx","app/App.jsx","reducers/appReducer.js","reducers/index.js","app/store.js","serviceWorker.js","index.js"],"names":["axios","axiosBase","create","baseURL","process","timeout","headers","history","createBrowserHistory","basename","setUsersList","users","type","payload","setLoading","value","setErrorRequest","status","setSuccessRequest","login","dispatch","userCredentials","a","post","token","data","localStorage","setItem","push","addUser","getItem","Authorization","loadUsers","get","renderInputField","input","icon","placeholder","meta","touched","error","Form","Input","content","fluid","renderCheckboxField","label","Checkbox","checked","name","onChange","e","isRequired","undefined","isSafePassword","test","reduxForm","form","handleSubmit","size","onSubmit","Segment","stacked","Field","component","Button","color","LoginPage","useDispatch","requestError","useSelector","app","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","values","Message","negative","header","withRouter","searchKey","sort","active","usersToRender","key","filter","username","toLowerCase","startsWith","filterUsers","Table","marginTop","celled","Header","Row","HeaderCell","className","data-sort","onClick","Icon","Body","map","index","id","first_name","Cell","Search","target","iconPosition","UsersListPage","usersList","useState","setActive","useEffect","Container","paddingTop","text","clearing","as","Link","to","floated","removeItem","columns","flag","currentTarget","dataset","current","sortedById","Layout","children","ErrorMessage","loading","Content","NotFoundPage","Preloader","Dimmer","inverted","page","Loader","initialValues","is_active","validate","goBack","requestSuccess","marginBottom","then","reset","catch","success","PrivateRoute","Component","rest","render","props","pathname","state","from","location","NotLoggedRoute","MainRouter","isLoading","path","exact","AddUser","App","initialState","rootReducer","combineReducers","formReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"yPAGaA,E,OAAQC,EAAUC,OAAO,CACpCC,QAASC,kDACTC,QAAS,IACTC,QAAS,CACP,eAAgB,mBAChB,mBAAoB,oB,SCPXC,EAAUC,YAAqB,CAC1CC,SAAUL,+CCOCM,EAAe,SAACC,GAAD,MAAY,CACtCC,KAP4B,iBAQ5BC,QAASF,IAQEG,EAAa,SAACC,GAAD,MAAY,CACpCH,KAfyB,cAgBzBC,QAASE,IAGEC,EAAkB,SAACC,GAAD,MAAa,CAC1CL,KAnB+B,oBAoB/BC,QAASI,IAGEC,EAAoB,SAACD,GAAD,MAAa,CAC5CL,KAvBiC,sBAwBjCC,QAASI,IAGEE,EAAK,uCAAG,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,6DACnBF,EAASN,GAAW,IADD,kBAKPd,EAAMuB,KAAK,mBAAoBF,GALxB,gBAIPG,EAJO,EAIfC,KAAQD,MAEVE,aAAaC,QAAQ,YAAaH,GAClCJ,EAASJ,GAAgB,IACzBT,EAAQqB,KAAK,eARI,kDAUjBR,EAASJ,GAAgB,IAVR,yBAYjBI,EAASN,GAAW,IAZH,6EAAH,wDAgBLe,EAAO,uCAAG,WAAOT,EAAUC,GAAjB,eAAAC,EAAA,6DACrBF,EAASN,GAAW,IACdU,EAAQE,aAAaI,QAAQ,aAFd,kBAIb9B,EAAMuB,KAAK,iBAAkBF,EAAiB,CAClDf,QAAS,CACPyB,cAAc,SAAD,OAAWP,MANT,OASnBJ,EAASJ,GAAgB,IACzBI,EAASF,GAAkB,IAVR,gDAYnBE,EAASJ,GAAgB,IACzBI,EAASF,GAAkB,IAbR,yBAenBE,EAASN,GAAW,IAfD,4EAAH,wDAmBPkB,EAAS,uCAAG,WAAOZ,GAAP,mBAAAE,EAAA,6DACvBF,EAASN,GAAW,IACdU,EAAQE,aAAaI,QAAQ,aAFZ,kBAIE9B,EAAMiC,IAAI,iBAAkB,CACjD3B,QAAS,CACPyB,cAAc,SAAD,OAAWP,MANP,gBAIbC,EAJa,EAIbA,KAKRL,EAASV,EAAae,IACtBL,EAASJ,GAAgB,IAVJ,kDAYrBI,EAASJ,GAAgB,IAZJ,yBAcrBI,EAASN,GAAW,IAdC,6EAAH,sD,6CClEToB,EAAmB,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,MACAC,EAF8B,EAE9BA,KACAxB,EAH8B,EAG9BA,KACAyB,EAJ8B,EAI9BA,YAJ8B,IAK9BC,KAAQC,EALsB,EAKtBA,QAASC,EALa,EAKbA,MALa,OAO9B,kBAACC,EAAA,EAAKC,MAAN,iBACMP,EADN,CAEEC,KAAMA,EACNC,YAAaA,EACbzB,KAAMA,EACN4B,MACED,GACAC,GAAS,CACPG,QAASH,GAGbI,OAAK,MAIIC,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOX,EAAV,EAAUA,MAAV,OACjC,kBAACM,EAAA,EAAKM,SAAN,CACEC,UAAWb,EAAMpB,MACjBkC,KAAMd,EAAMc,KACZH,MAAOA,EACPI,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,QAAN,OAAoBb,EAAMe,SAASF,OAIpCI,EAAa,SAACrC,GAAD,OAAYA,OAAQsC,EAAY,YAE7CC,EAAiB,SAACvC,GAAD,OAC5BA,IAAU,kDAAkDwC,KAAKxC,GAC7D,oGACAsC,GCTSG,cAAU,CACvBC,KAAM,cADOD,EAxBG,SAAC,GAAD,IAAGE,EAAH,EAAGA,aAAH,OAChB,kBAACjB,EAAA,EAAD,CAAMkB,KAAK,QAAQC,SAAUF,GAC3B,kBAACG,EAAA,EAAD,CAASC,SAAO,GACd,kBAACC,EAAA,EAAD,CACEd,KAAK,WACLrC,KAAK,OACLwB,KAAK,OACLC,YAAY,iBACZ2B,UAAW9B,IAEb,kBAAC6B,EAAA,EAAD,CACEd,KAAK,WACLrC,KAAK,WACLwB,KAAK,OACLC,YAAY,WACZ2B,UAAW9B,IAEb,kBAAC+B,EAAA,EAAD,CAAQC,MAAM,OAAOtB,OAAK,EAACe,KAAK,SAAhC,c,kBCjBAQ,EAAY,WAChB,IAAM/C,EAAWgD,cACXC,EAAeC,aAAY,qBAAGC,IAAOF,gBAM3C,OACE,kBAACG,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UACjE,kBAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC9B,kBAAC,EAAD,CAAWlB,SAPI,SAACmB,GACpB5D,EAAMC,EAAU2D,MAOXV,GACC,kBAACW,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAO,uBACPvC,QAAQ,wB,0BCkCLwC,eAlDG,SAAC,GAAiD,IAA/CxE,EAA8C,EAA9CA,MAAOyE,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OACrCC,GAD2D,EAAdhF,QAC7B6E,ECPG,SAACzE,EAAO6E,GACjC,OAAO7E,EAAM8E,QAAO,qBAAGC,SACZC,cAAcC,WAAWJ,EAAIG,kBDKNE,CAAYlF,EAAOyE,GAAazE,GAElE,OACE,kBAACmF,EAAA,EAAD,CAAOpB,MAAO,CAAEqB,UAAW,QAAUC,QAAM,GACzC,kBAACF,EAAA,EAAMG,OAAP,KACE,kBAACH,EAAA,EAAMI,IAAP,KACE,kBAACJ,EAAA,EAAMK,WAAP,UACA,kBAACL,EAAA,EAAMK,WAAP,KACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,cACb,yBACEA,UAAS,gBAAqB,IAAXd,EAAkB,cAAgB,IACrDe,YAAU,SACVC,QAASjB,GAET,kBAACkB,EAAA,EAAD,CAAMtD,KAAK,cAEb,yBACEmD,UAAS,gBAAqB,IAAXd,EAAmB,cAAgB,IACtDe,YAAU,UACVpD,KAAK,UACLqD,QAASjB,GAET,kBAACkB,EAAA,EAAD,CAAMtD,KAAK,iBAGf,qCAGJ,kBAAC6C,EAAA,EAAMK,WAAP,mBACA,kBAACL,EAAA,EAAMK,WAAP,mBAGJ,kBAACL,EAAA,EAAMU,KAAP,KACGjB,EAAckB,KAAI,WAA+BC,GAAW,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,WAAYlB,EAAsB,EAAtBA,SACpC,OACE,kBAACI,EAAA,EAAMI,IAAP,CAAWV,IAAKE,GACd,kBAACI,EAAA,EAAMe,KAAP,KAAaH,EAAQ,GACrB,kBAACZ,EAAA,EAAMe,KAAP,KAAaF,GACb,kBAACb,EAAA,EAAMe,KAAP,KAAaD,GAAc,aAC3B,kBAACd,EAAA,EAAMe,KAAP,KAAanB,Y,2BE1CrBoB,EAAS,WACb,IAAM1F,EAAWgD,cAKjB,OACE,kBAAC1B,EAAA,EAAD,CACEN,KAAK,QACLc,SAPiB,SAAC,GAA2B,IAAfnC,EAAc,EAAxBgG,OAAUhG,MAChCK,ENMkC,CACpCR,KAX4B,iBAY5BC,QMRwBE,KAOpBiG,aAAa,OACb3E,YAAY,kBACZO,OAAK,K,QCRLqE,EAAgB,WACpB,IAAM7F,EAAWgD,cACXgB,EAAYd,aAAY,qBAAGC,IAAOa,aAClCzE,EAAQ2D,aAAY,qBAAGC,IAAO2C,aAHV,EAIEC,mBAAS,MAJX,mBAInB7B,EAJmB,KAIX8B,EAJW,KAoB1B,OAJAC,qBAAU,WACRrF,EAAUZ,KACT,CAACA,IAGF,kBAACkG,EAAA,EAAD,CAAW5C,MAAO,CAAE6C,WAAY,QAAUC,MAAI,GAC5C,kBAAC3D,EAAA,EAAD,CAAS4D,UAAQ,GACf,kBAACxB,EAAA,EAAD,CAAQyB,GAAIC,IAAMC,GAAG,IAAIC,QAAQ,QAAQvB,QAX1B,WACnB5E,aAAaoG,WAAW,eAUpB,YAIF,kBAACtD,EAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,EAAA,EAAK0B,IAAN,KACE,kBAAC1B,EAAA,EAAKK,OAAN,KACE,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAKK,OAAN,KACE,kBAACZ,EAAA,EAAD,CAAQ2D,GAAG,YAAYxF,KAAK,MAAMyF,QAAQ,QAAQH,GAAIC,SAI3DhH,GACC,kBAAC,EAAD,CACEA,MAAOA,EACP0E,KAlCkB,SAAC,GAAuB,IAC1C2C,EADyC,EAApBC,cACAC,QAAQ7C,KACnC+B,EAAmB,WAATY,GACV5G,EAASV,EFZa,SAACC,EAAOqH,GAChC,OAAOA,EACHrH,EAAM0E,MAAK,uBAAGsB,GAAH,EAAoBA,MAC/BhG,EAAM0E,MAAK,kBAAO8C,EAAP,EAAGxB,GAAH,SAAoBA,GAAsBwB,KESjCC,CAAWzH,EAAgB,WAATqH,MAgClC5C,UAAWA,EACXE,OAAQA,MC9CZ+C,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,kBAAChB,EAAA,EAAD,CAAWlB,UAAU,UACnB,kBAAC5B,EAAA,EAAD,CAAME,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UAC9C,kBAACJ,EAAA,EAAKK,OAAN,KAAcyD,MCJhBC,EAAe,SAAC,GAAD,IAAGrD,EAAH,EAAGA,OAAQsC,EAAX,EAAWA,KAAX,OACnB,kBAACxC,EAAA,EAAD,CAASrB,KAAK,OAAOvB,MAAI,GACvB,kBAACmE,EAAA,EAAD,CAAMtD,KAAK,iBAAiBuF,SAAO,IACnC,kBAACxD,EAAA,EAAQyD,QAAT,KACE,kBAACzD,EAAA,EAAQiB,OAAT,KAAiBf,GAChBsC,EACD,kBAAC,IAAD,CAAMI,GAAG,KAAT,oCCNAc,EAAe,kBACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CACExD,OAAO,iBACPsC,KAAK,0D,kBCNLmB,EAAY,kBAChB,kBAACC,EAAA,EAAD,CAAQtD,QAAM,EAACuD,UAAQ,EAACC,MAAI,GAC1B,kBAACC,EAAA,EAAD,CAAQpF,KAAK,OAAOkF,UAAQ,GAA5B,gBCiDWrF,cAAU,CACvBC,KAAM,wBACNuF,cAAe,CACbC,WAAW,IAHAzF,EA5Ca,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAC7B,OACE,kBAACjB,EAAA,EAAD,CAAMkB,KAAK,QAAQC,SAAUF,GAC3B,kBAACG,EAAA,EAAD,CAASC,SAAO,GACd,kBAACC,EAAA,EAAD,CACEd,KAAK,aACLrC,KAAK,OACLyB,YAAY,aACZ2B,UAAW9B,IAEb,kBAAC6B,EAAA,EAAD,CACEd,KAAK,YACLrC,KAAK,OACLyB,YAAY,YACZ2B,UAAW9B,IAEb,kBAAC6B,EAAA,EAAD,CACEd,KAAK,WACLrC,KAAK,OACLyB,YAAY,WACZ6G,SAAU,CAAC9F,GACXY,UAAW9B,IAEb,kBAAC6B,EAAA,EAAD,CACEd,KAAK,WACLrC,KAAK,WACLyB,YAAY,WACZ6G,SAAU,CAAC9F,EAAYE,GACvBU,UAAW9B,IAEb,kBAAC6B,EAAA,EAAD,CACEd,KAAK,YACLH,MAAM,cACNlC,KAAK,WACLoD,UAAWnB,IAEb,kBAACoB,EAAA,EAAD,CAAQC,MAAM,OAAOtB,OAAK,EAACe,KAAK,SAAhC,qB,SCMOwB,gBA1CC,SAAC,GAA6B,IAAhBgE,EAAe,EAA1B5I,QAAW4I,OACtB/H,EAAWgD,cACXC,EAAeC,aAAY,qBAAGC,IAAOF,gBACrC+E,EAAiB9E,aACrB,qBAAGC,IAAO6E,kBASZ,OACE,kBAAC,EAAD,KACE,yBAAKhD,UAAU,qBACb,kBAACG,EAAA,EAAD,CACE5C,KAAK,QACLe,MAAO,CAAE2E,aAAc,QACvBpG,KAAK,aACLqD,QAAS6C,IAEX,kBAAC,EAAD,CAAqBvF,SAfN,SAACvC,GACpBQ,EAAQT,EAAUC,GACfiI,MAAK,kBAAMlI,EAASmI,YAAM,6BAC1BC,OAAM,kBAaJnF,GACC,kBAACW,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAO,8BACPvC,QAAQ,qBAGXyG,GACC,kBAACpE,EAAA,EAAD,CACEyE,SAAO,EACPvE,OAAO,wCACPvC,QAAQ,8D,UCzCd+G,GAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApC3F,UAAyB4F,EAAW,8BACpDpI,EAAQE,aAAaI,QAAQ,aACnC,OACE,kBAAC,IAAD,iBACM8H,EADN,CAEEC,OAAQ,SAACC,GACP,OAAOtI,EACL,kBAACmI,EAAcG,GAEf,kBAAC,IAAD,CACElC,GAAI,CACFmC,SAAU,IACVC,MAAO,CAAEC,KAAMH,EAAMI,kBCZ7BC,GAAiB,SAAC,GAAuC,IAA1BR,EAAyB,EAApC3F,UAAyB4F,EAAW,8BACtDpI,EAAQE,aAAaI,QAAQ,aACnC,OACE,kBAAC,IAAD,iBACM8H,EADN,CAEEC,OAAQ,SAACC,GACP,OAAQtI,EAGN,kBAAC,IAAD,CACEoG,GAAI,CACFmC,SAAU,cACVC,MAAO,CAAEC,KAAMH,EAAMI,aALzB,kBAACP,EAAcG,QCGnBM,GAAa,WACjB,IAAMC,EAAY/F,aAAY,qBAAGC,IAAO8F,aAExC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAgBC,KAAK,IAAIC,OAAK,EAACvG,UAAWG,IAC1C,kBAAC,GAAD,CAAcoG,OAAK,EAACD,KAAK,cAActG,UAAWiD,IAClD,kBAAC,GAAD,CAAcqD,KAAK,YAAYtG,UAAWwG,KAC1C,kBAAC,IAAD,CAAOxG,UAAW0E,KAEnB2B,GAAa,kBAAC,EAAD,QCpBdI,GAAM,WACV,OAAO,kBAAC,GAAD,O,0DCGHC,GAAe,CACnBL,WAAW,EACXhG,cAAc,EACd+E,gBAAgB,EAChBlC,UAAW,KACX9B,UAAW,MCRPuF,GAAcC,2BAAgB,CAClCrG,IDUiB,WAA8C,IAA7CyF,EAA4C,uDAApCU,GAAoC,yCAApB9J,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAChD,OAAQD,GACN,IlBf0B,iBkBgBxB,OAAO,6BACFoJ,GADL,IAEE9C,UAAU,aAAKrG,KAGnB,IlBpB0B,iBkBqBxB,OAAO,6BACFmJ,GADL,IAEE5E,UAAWvE,IAEf,IlBxBuB,ckByBrB,OAAO,6BACFmJ,GADL,IAEEK,UAAWxJ,IAGf,IlB7B6B,oBkB8B3B,OAAO,6BACFmJ,GADL,IAEE3F,aAAcxD,IAGlB,IlBlC+B,sBkBmC7B,OAAO,6BACFmJ,GADL,IAEEZ,eAAgBvI,IAGpB,QACE,OAAOmJ,ICzCXvG,KAAMoH,OCDFC,GAAa,CAACC,MAEdC,GAAQC,uBACZN,GACAO,+BAAoBC,mBAAe,WAAf,EAAmBL,MCErBM,QACW,cAA7BC,OAAOnB,SAASoB,UAEe,UAA7BD,OAAOnB,SAASoB,UAEhBD,OAAOnB,SAASoB,SAASC,MACvB,2D,cCLNC,IAAS3B,OACP,kBAAC,IAAD,CAAUmB,MAAOA,IACf,kBAAC,IAAD,CAAQzK,QAASA,GACf,kBAAC,GAAD,QAGJkL,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAACwC,GACLA,EAAaC,gBAEdvC,OAAM,SAAChH,GACNwJ,QAAQxJ,MAAMA,EAAMyJ,c","file":"static/js/main.1d02da5c.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-named-default\nimport { default as axiosBase } from 'axios';\n\nexport const axios = axiosBase.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n});\n","import { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory({\n  basename: process.env.REACT_APP_PUBLIC_URL,\n});\n","import { axios } from '../app/axiosConfig';\nimport { history } from '../app/history';\n\nexport const SET_USERS_LIST = 'SET_USERS_LIST';\nexport const SET_SEARCH_KEY = 'SET_SEARCH_KEY';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ERROR_REQUEST = 'SET_ERROR_REQUEST';\nexport const SET_SUCCESS_REQUEST = 'SET_SUCCESS_REQUEST';\n\nexport const setUsersList = (users) => ({\n  type: SET_USERS_LIST,\n  payload: users,\n});\n\nexport const setSearchKey = (key) => ({\n  type: SET_SEARCH_KEY,\n  payload: key,\n});\n\nexport const setLoading = (value) => ({\n  type: SET_LOADING,\n  payload: value,\n});\n\nexport const setErrorRequest = (status) => ({\n  type: SET_ERROR_REQUEST,\n  payload: status,\n});\n\nexport const setSuccessRequest = (status) => ({\n  type: SET_SUCCESS_REQUEST,\n  payload: status,\n});\n\nexport const login = async (dispatch, userCredentials) => {\n  dispatch(setLoading(true));\n  try {\n    const {\n      data: { token },\n    } = await axios.post('/api-token-auth/', userCredentials);\n    localStorage.setItem('authToken', token);\n    dispatch(setErrorRequest(false));\n    history.push('/users-list');\n  } catch (e) {\n    dispatch(setErrorRequest(true));\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const addUser = async (dispatch, userCredentials) => {\n  dispatch(setLoading(true));\n  const token = localStorage.getItem('authToken');\n  try {\n    await axios.post('/api/v1/users/', userCredentials, {\n      headers: {\n        Authorization: `token ${token}`,\n      },\n    });\n    dispatch(setErrorRequest(false));\n    dispatch(setSuccessRequest(true));\n  } catch (e) {\n    dispatch(setErrorRequest(true));\n    dispatch(setSuccessRequest(false));\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const loadUsers = async (dispatch) => {\n  dispatch(setLoading(true));\n  const token = localStorage.getItem('authToken');\n  try {\n    const { data } = await axios.get('/api/v1/users/', {\n      headers: {\n        Authorization: `token ${token}`,\n      },\n    });\n    dispatch(setUsersList(data));\n    dispatch(setErrorRequest(false));\n  } catch (e) {\n    dispatch(setErrorRequest(true));\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\n\nexport const renderInputField = ({\n  input,\n  icon,\n  type,\n  placeholder,\n  meta: { touched, error },\n}) => (\n  <Form.Input\n    {...input}\n    icon={icon}\n    placeholder={placeholder}\n    type={type}\n    error={\n      touched &&\n      error && {\n        content: error,\n      }\n    }\n    fluid\n  />\n);\n\nexport const renderCheckboxField = ({ label, input }) => (\n  <Form.Checkbox\n    checked={!!input.value}\n    name={input.name}\n    label={label}\n    onChange={(e, { checked }) => input.onChange(checked)}\n  />\n);\n\nexport const isRequired = (value) => (value ? undefined : 'Required');\n\nexport const isSafePassword = (value) =>\n  value && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/i.test(value)\n    ? 'Minimum eight characters, at least one uppercase letter, one lowercase letter and one number'\n    : undefined;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, Form, Segment } from 'semantic-ui-react';\n\nimport { renderInputField } from '../../common/formTools';\n\nconst LoginForm = ({ handleSubmit }) => (\n  <Form size=\"large\" onSubmit={handleSubmit}>\n    <Segment stacked>\n      <Field\n        name=\"username\"\n        type=\"text\"\n        icon=\"user\"\n        placeholder=\"E-mail address\"\n        component={renderInputField}\n      />\n      <Field\n        name=\"password\"\n        type=\"password\"\n        icon=\"lock\"\n        placeholder=\"Password\"\n        component={renderInputField}\n      />\n      <Button color=\"teal\" fluid size=\"large\">\n        Login\n      </Button>\n    </Segment>\n  </Form>\n);\n\nexport default reduxForm({\n  form: 'login-form',\n})(LoginForm);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../actions/app';\nimport LoginForm from '../../components/LoginForm';\nimport { Grid, Message } from 'semantic-ui-react';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const requestError = useSelector(({ app: { requestError } }) => requestError);\n\n  const handleSubmit = (values) => {\n    login(dispatch, values);\n  };\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <LoginForm onSubmit={handleSubmit} />\n        {requestError && (\n          <Message\n            negative\n            header=\"Authorization failed\"\n            content=\"Please try again\"\n          />\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport { LoginPage };\n","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\nimport { filterUsers } from '../../common/helpers';\n\nconst UsersList = ({ users, searchKey, sort, active, history }) => {\n  const usersToRender = searchKey ? filterUsers(users, searchKey) : users;\n\n  return (\n    <Table style={{ marginTop: '20px' }} celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>#</Table.HeaderCell>\n          <Table.HeaderCell>\n            <div className=\"icons-wrapper\">\n              <div className=\"sort-icons\">\n                <div\n                  className={`icon ${active === true ? 'icon-active' : ''}`}\n                  data-sort=\"ascend\"\n                  onClick={sort}\n                >\n                  <Icon name=\"angle up\" />\n                </div>\n                <div\n                  className={`icon ${active === false ? 'icon-active' : ''}`}\n                  data-sort=\"descend\"\n                  name=\"descend\"\n                  onClick={sort}\n                >\n                  <Icon name=\"angle down\" />\n                </div>\n              </div>\n              <div>ID</div>\n            </div>\n          </Table.HeaderCell>\n          <Table.HeaderCell>First Name</Table.HeaderCell>\n          <Table.HeaderCell>Username</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {usersToRender.map(({ id, first_name, username }, index) => {\n          return (\n            <Table.Row key={username}>\n              <Table.Cell>{index + 1}</Table.Cell>\n              <Table.Cell>{id}</Table.Cell>\n              <Table.Cell>{first_name || 'Anonymous'}</Table.Cell>\n              <Table.Cell>{username}</Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default withRouter(UsersList);\n","export const filterUsers = (users, key) => {\n  return users.filter(({ username }) =>\n    username.toLowerCase().startsWith(key.toLowerCase())\n  );\n};\n\nexport const sortedById = (users, flag) => {\n  return flag\n    ? users.sort(({ id: current }, { id: next }) => current - next)\n    : users.sort(({ id: current }, { id: next }) => next - current);\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from 'semantic-ui-react';\nimport { setSearchKey } from '../../actions/app';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const handleSearch = ({ target: { value } }) => {\n    dispatch(setSearchKey(value));\n  };\n\n  return (\n    <Input\n      icon=\"users\"\n      onChange={handleSearch}\n      iconPosition=\"left\"\n      placeholder=\"Search users...\"\n      fluid\n    />\n  );\n};\n\nexport { Search };\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUsersList, loadUsers } from '../../actions/app';\nimport UsersList from '../../components/UsersList';\nimport { sortedById } from '../../common/helpers';\nimport { Button, Container, Header, Grid, Segment } from 'semantic-ui-react';\nimport { Search } from '../../components/Search';\nimport { Link } from 'react-router-dom';\n\nconst UsersListPage = () => {\n  const dispatch = useDispatch();\n  const searchKey = useSelector(({ app: { searchKey } }) => searchKey);\n  const users = useSelector(({ app: { usersList } }) => usersList);\n  const [active, setActive] = useState(null);\n\n  const handleSortedUsers = ({ currentTarget }) => {\n    const flag = currentTarget.dataset.sort;\n    setActive(flag === 'ascend');\n    dispatch(setUsersList(sortedById(users, flag === 'ascend')));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('authToken');\n  };\n\n  useEffect(() => {\n    loadUsers(dispatch);\n  }, [dispatch]);\n\n  return (\n    <Container style={{ paddingTop: '20px' }} text>\n      <Segment clearing>\n        <Header as={Link} to=\"/\" floated=\"right\" onClick={handleLogout}>\n          Log Out\n        </Header>\n      </Segment>\n      <Grid columns={2}>\n        <Grid.Row>\n          <Grid.Column>\n            <Search />\n          </Grid.Column>\n          <Grid.Column>\n            <Button to=\"/add-user\" icon=\"add\" floated=\"right\" as={Link} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      {users && (\n        <UsersList\n          users={users}\n          sort={handleSortedUsers}\n          searchKey={searchKey}\n          active={active}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport { UsersListPage };\n","import React from 'react';\n\nimport { Container, Grid } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Layout = ({ children }) => {\n  return (\n    <Container className=\"layout\">\n      <Grid style={{ height: '100vh' }} verticalAlign=\"middle\">\n        <Grid.Column>{children}</Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Layout };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Message, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ header, text }) => (\n  <Message size=\"huge\" icon>\n    <Icon name=\"circle notched\" loading />\n    <Message.Content>\n      <Message.Header>{header}</Message.Header>\n      {text}\n      <Link to=\"/\"> You can return to main page.</Link>\n    </Message.Content>\n  </Message>\n);\n\nErrorMessage.propTypes = {\n  header: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport { ErrorMessage };\n","import React from 'react';\n\nimport { Layout } from '../../components/Layout';\nimport { ErrorMessage } from '../../components/ErrorMessage';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <ErrorMessage\n      header=\"Page not found\"\n      text=\"You may have made a mistake when going to the page.\"\n    />\n  </Layout>\n);\n\nexport { NotFoundPage };\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Preloader = () => (\n  <Dimmer active inverted page>\n    <Loader size=\"huge\" inverted>\n      Loading...\n    </Loader>\n  </Dimmer>\n);\n\nexport { Preloader };\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport {\n  renderInputField,\n  renderCheckboxField,\n  isRequired,\n  isSafePassword,\n} from '../../common/formTools';\n\nconst UserCredentialsForm = ({ handleSubmit }) => {\n  return (\n    <Form size=\"large\" onSubmit={handleSubmit}>\n      <Segment stacked>\n        <Field\n          name=\"first_name\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          component={renderInputField}\n        />\n        <Field\n          name=\"last_name\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          component={renderInputField}\n        />\n        <Field\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Username\"\n          validate={[isRequired]}\n          component={renderInputField}\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          validate={[isRequired, isSafePassword]}\n          component={renderInputField}\n        />\n        <Field\n          name=\"is_active\"\n          label=\"Make Active\"\n          type=\"checkbox\"\n          component={renderCheckboxField}\n        />\n        <Button color=\"teal\" fluid size=\"large\">\n          Add new user\n        </Button>\n      </Segment>\n    </Form>\n  );\n};\n\nexport default reduxForm({\n  form: 'user-credentials-form',\n  initialValues: {\n    is_active: false,\n  },\n})(UserCredentialsForm);\n","import React from 'react';\nimport UserCredentialsForm from '../../components/UserCredentialsForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addUser } from '../../actions/app';\nimport { Icon } from 'semantic-ui-react';\nimport { reset } from 'redux-form';\nimport { Layout } from '../../components/Layout';\nimport { withRouter } from 'react-router-dom';\nimport { Message } from 'semantic-ui-react';\n\nconst AddUser = ({ history: { goBack } }) => {\n  const dispatch = useDispatch();\n  const requestError = useSelector(({ app: { requestError } }) => requestError);\n  const requestSuccess = useSelector(\n    ({ app: { requestSuccess } }) => requestSuccess\n  );\n\n  const handleSubmit = (userCredentials) => {\n    addUser(dispatch, userCredentials)\n      .then(() => dispatch(reset('user-credentials-form')))\n      .catch(() => {});\n  };\n\n  return (\n    <Layout>\n      <div className=\"credentials-block\">\n        <Icon\n          size=\"large\"\n          style={{ marginBottom: '15px' }}\n          name=\"arrow left\"\n          onClick={goBack}\n        />\n        <UserCredentialsForm onSubmit={handleSubmit} />\n        {requestError && (\n          <Message\n            negative\n            header=\"Failed registration attempt\"\n            content=\"Please try again\"\n          />\n        )}\n        {requestSuccess && (\n          <Message\n            success\n            header=\"Your user registration was successful\"\n            content=\"You may now log-in with the username you have chosen\"\n          />\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default withRouter(AddUser);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const token = localStorage.getItem('authToken');\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: props.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport { PrivateRoute };\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst NotLoggedRoute = ({ component: Component, ...rest }) => {\n  const token = localStorage.getItem('authToken');\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return !token ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/users-list',\n              state: { from: props.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport { NotLoggedRoute };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { LoginPage } from '../pages/LoginPage';\nimport { UsersListPage } from '../pages/UsersListPage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\nimport { Preloader } from '../components/Preloader';\nimport AddUser from '../pages/AddUser';\n\nimport { PrivateRoute } from './PrivateRouter';\nimport { NotLoggedRoute } from './NotLoggedRoute';\n\nconst MainRouter = () => {\n  const isLoading = useSelector(({ app: { isLoading } }) => isLoading);\n\n  return (\n    <>\n      <Switch>\n        <NotLoggedRoute path=\"/\" exact component={LoginPage} />\n        <PrivateRoute exact path=\"/users-list\" component={UsersListPage} />\n        <PrivateRoute path=\"/add-user\" component={AddUser} />\n        <Route component={NotFoundPage} />\n      </Switch>\n      {isLoading && <Preloader />}\n    </>\n  );\n};\n\nexport { MainRouter };\n","import React from 'react';\n\nimport { MainRouter } from './MainRouter';\n\nconst App = () => {\n  return <MainRouter />;\n};\n\nexport { App };\n","import {\n  SET_LOADING,\n  SET_ERROR_REQUEST,\n  SET_SUCCESS_REQUEST,\n  SET_USERS_LIST,\n  SET_SEARCH_KEY,\n} from '../actions/app';\n\nconst initialState = {\n  isLoading: false,\n  requestError: false,\n  requestSuccess: false,\n  usersList: null,\n  searchKey: null,\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_USERS_LIST:\n      return {\n        ...state,\n        usersList: [...payload],\n      };\n\n    case SET_SEARCH_KEY:\n      return {\n        ...state,\n        searchKey: payload,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: payload,\n      };\n\n    case SET_ERROR_REQUEST:\n      return {\n        ...state,\n        requestError: payload,\n      };\n\n    case SET_SUCCESS_REQUEST:\n      return {\n        ...state,\n        requestSuccess: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { appReducer };\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport { appReducer } from './appReducer';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  form: formReducer,\n});\n\nexport { rootReducer };\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport { rootReducer } from '../reducers';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport { store };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport { App } from './app/App';\nimport { history } from './app/history';\nimport { store } from './app/store';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './scss/assets.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}